{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.scss"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","classes","Order","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios","module","exports"],"mappings":"4JA0BeA,EAvBD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAEtE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,IAAKD,EAAGJ,KACTM,MAAO,CAACC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QACJP,EAAGJ,KANrB,KAM6BI,EAAGH,OANhC,QASX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,oCAAS,gCAASN,EAAMmB,MAAMC,QAAQ,GAA7B,c,wCCmBNC,uBAfS,SAAAC,GACpB,MAAO,CACHC,OAAQD,EAAMvB,MAAMwB,OACpBC,QAASF,EAAMvB,MAAMyB,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAIA,SAAAC,GACvB,MAAO,CACHC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAI/DN,CAA6CU,aAhC7C,SAAC/B,GAAW,IAEhB6B,EAAiB7B,EAAjB6B,cAKP,OAJAG,qBAAU,WACNH,EAAc7B,EAAMyB,MAAOzB,EAAM2B,UAClC,CAACE,IAGA,6BACK7B,EAAMwB,QAAU,kBAACS,EAAA,EAAD,MACbjC,EAAMuB,OAAOhB,KAAI,SAAAR,GAAK,OAAI,kBAACmB,EAAD,CAAOT,IAAKV,EAAMmC,GACJjC,YAAaF,EAAME,YACnBkB,MAAOpB,EAAMoB,cAoBgBgB,O,mBCvCrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.46eb24e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Order.module.scss\"\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]})\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span key={ig.name}\r\n                    style={{textTransform: \"capitalize\", \r\n                            display: \"inline-block\",\r\n                            margin: \"0 8px\",\r\n                            border: \"1px solid grey\",\r\n                            padding: \"5px\"}}>\r\n                                {ig.name} ({ig.amount})\r\n                    </span>\r\n    })\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price <strong>{props.price.toFixed(2)} â‚¬</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, { useEffect } from 'react';\r\nimport Order from \"../../components/Order/Order\"\r\nimport axios from \"../../axios\"\r\nimport withErrorHandler from \"../../hoc/WithErrorHandler/withErrorHandler\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\n\r\nconst Orders = (props) => {\r\n\r\n    const {onFetchOrders} = props;\r\n    useEffect(()=>{\r\n        onFetchOrders(props.token, props.userId);\r\n    }, [onFetchOrders])\r\n    \r\n    return (\r\n        <div>\r\n            {props.loading ? <Spinner /> : \r\n                props.orders.map(order => <Order key={order.id} \r\n                                                        ingredients={order.ingredients} \r\n                                                        price={order.price}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1DKqx\"};"],"sourceRoot":""}